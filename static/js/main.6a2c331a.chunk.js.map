{"version":3,"sources":["services/httpService.js","store/actions.js","store/reducers.js","store/store.js","context/ThemeContext.js","components/DropdownSelect.jsx","components/TemperatureConverter.jsx","components/SingleDayWeather.jsx","components/WeeklyWeatherContainer.jsx","components/Fav.js","utils/ValidityChecker.js","components/Geo.jsx","App.js","serviceWorker.js","components/IconComponent.js","components/HeaderComponent.js","components/Navbar.jsx","components/FavWeather.jsx","components/MyFav.jsx","index.js"],"names":["axios","interceptors","response","use","error","toast","message","data","Message","Promise","reject","http","get","post","put","patch","delete","TYPE_IN_CITYNAME_FIELD","weatherData","SelectedOption","api_key","getForcast","value","catch","then","store","dispatch","forecast","type","DailyForecasts","selectedOption","code","city","initialState","userInput","err","geo","loading","createStore","state","action","composeWithDevTools","applyMiddleware","thunk","ThemeContext","React","createContext","theme","toggleTheme","ThemeContextProvider","children","useState","setTheme","colorTheme","saveThemePreference","localStorage","setItem","JSON","stringify","useEffect","getItem","parse","hour","moment","format","daynightChecker","Provider","selectedTheme","DropdownSelect","props","onInputChange","e","placenameHandler","onChange","label","customStyles","option","provided","borderBottom","color","isSelected","context","padding","backgroundColor","isFocused","console","log","singleValue","opacity","isDisabled","transition","className","this","styles","classNamePrefix","placeholder","isSearchable","name","options","locations","Component","contextType","connect","res","test","typePlacename","TemperatureConverter","id","handleOnChange","checked","defaultChecked","htmlFor","SingleDayWeather","selectedDay","dayIndex","dayDate","dayIcon","dayMinTemp","dayMaxTemp","selectedConvert","handleDaySelection","onClick","src","alt","WeeklyWeatherContainer","selectedCity","Date","Day","Icon","IconPhrase","map","day","index","Temperature","Maximum","Value","parseFloat","toFixed","Minimum","EpochDate","Fav","active","favme","$","document","click","hasClass","is","target","has","length","on","toggleClass","isValid","isEmpty","isNil","Demo","updateAddress","latlong","a","AdministrativeArea","EnglishName","Key","setState","formatCoords","latitude","longitude","getAddress","navigator","geolocation","getCurrentPosition","position","coords","Loading","App","getLocations","info","cityCountry","location","Country","push","locationsApi","fav","queryString","search","initfav","prevProps","prevState","Fragment","style","minHeight","temperatureConverter","flat","indexOf","Object","keys","withRouter","Boolean","window","hostname","match","IconComponent","iconType","HeaderComponent","useContext","icons","unchecked","Navbar","border","zIndex","borderColor","to","pathname","hash","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","FavWeather","MyFav","all","x","i","getDay","findIndex","FOOTER","bottom","left","href","rel","width","height","viewBox","fill","transform","aria-hidden","d","transformOrigin","Index","myfav","classList","getAttribute","splice","path","component","exact","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6a2c331a.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\naxios.interceptors.response.use(null, error => {\r\n\r\n    toast.error(error.message);\r\n    if (!error.response.data.Message)\r\n        toast.error(error.response.data);\r\n    else\r\n        toast.error(error.response.data.Message);\r\n    return Promise.reject(error);\r\n});\r\nlet http = {\r\n    get: axios.get,\r\n    post: axios.post,\r\n    put: axios.put,\r\n    patch: axios.patch,\r\n    delete: axios.delete\r\n};\r\nexport default http","import store from './store'\nimport http from \"../services/httpService\";\n\nexport const TYPE_IN_CITYNAME_FIELD = \"TYPE_IN_CITYNAME_FIELD\"\nexport const weatherData = \"weatherData\"\nexport const SelectedOption = \"SelectedOption\"\n\nconst api_key = [\"jdJtjY5LHZvdj0IS8iiRqturSfo6sjq3\",\n   \"Pcam0PjGtEMwkxAAI0LL8lIjSlpwkHFS\",\n   \"EVO76C8niYMxHwXnuF7yAiRLSKA3R8Ud\",\n   \"keIkcwQuwHMsCqZJawOVskNUec3ErVQq\"]\n\nexport function typePlacename(e) {\n\n   let res = /^[a-zA-Z]+$/.test(e);\n   let err\n   if (!res && e !== \"\") {\n      err = true\n   } else {\n      err = false\n   }\n   return {\n      type: TYPE_IN_CITYNAME_FIELD,\n      err: err\n   }\n}\nexport function getForcast(value) {\n   return function () {\n\n      return http.get(\n         `https://cors-anywhere.herokuapp.com/https://dataservice.accuweather.com/forecasts/v1/daily/5day/${value}?apikey=${api_key[2]}&details=true`\n      )\n         .catch(\n            () => {\n               http.get(\n                  `https://cors-anywhere.herokuapp.com/https://dataservice.accuweather.com/forecasts/v1/daily/5day/${value}?apikey=${api_key[3]}&details=true`\n               ).then((response) => {\n\n                  store.dispatch(forecast(response))\n               })\n            }\n         )\n         .then((response) => {\n            if (response)\n               store.dispatch(forecast(response))\n         })\n\n\n\n   }\n\n\n};\n\n\nexport function forecast(forecast) {\n   return {\n      type: weatherData,\n      weatherData: forecast.data.DailyForecasts,\n\n   }\n}\n\nexport function selectedOption(selectedOption) {\n   return {\n      type: SelectedOption,\n      code: selectedOption.code,\n      city: selectedOption.city,\n   }\n}\n\n\n\n\n","import {\n   TYPE_IN_CITYNAME_FIELD,\n   weatherData,\n   SelectedOption\n} from './actions'\n\n\nexport const initialState = {\n   api_key: [\"jdJtjY5LHZvdj0IS8iiRqturSfo6sjq3\",\n      \"Pcam0PjGtEMwkxAAI0LL8lIjSlpwkHFS\",\n      \"EVO76C8niYMxHwXnuF7yAiRLSKA3R8Ud\",\n      \"keIkcwQuwHMsCqZJawOVskNUec3ErVQq\"],\n   userInput: {\n      err: false\n   },\n   weatherData: [],\n   code: \"215854\",\n   city: \"Tel Aviv\",\n   geo: false,\n   loading: true,\n\n\n}\n\n\nexport function rootReducer(state = initialState, action) {\n   switch (action.type) {\n\n      case TYPE_IN_CITYNAME_FIELD:\n         return {\n            ...state,\n            userInput: {\n               ...state.err,\n               err: action.err\n            }\n         }\n      case weatherData:\n         return {\n            ...state,\n            weatherData: action.weatherData,\n            loading: false\n\n         }\n\n      case SelectedOption:\n         return {\n            ...state,\n            code: action.code,\n            city: action.city,\n            loading: true,\n            geo: action.geo || false,\n         }\n\n\n      default:\n         return state\n\n\n   }\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport { rootReducer } from './reducers'\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store\n","import React, { useState, useEffect } from 'react'\nimport moment from 'moment-timezone'\n\nconst ThemeContext = React.createContext({\n  theme: 'light',\n  toggleTheme: () => { }\n})\n\n\nconst ThemeContextProvider = ({ children }) => {\n  const [theme, setTheme] = useState('')\n  const colorTheme = theme === 'light' ? 'dark' : 'light'\n\n  const toggleTheme = () => {\n    const selectedTheme = theme === 'light' ? 'dark' : 'light'\n    setTheme(selectedTheme)\n    saveThemePreference(selectedTheme)\n  }\n\n  const saveThemePreference = theme => {\n    localStorage.setItem('theme', JSON.stringify(theme))\n  }\n\n\n  useEffect(() => {\n    // set theme based on the time on initial application load and\n    // when there is no theme preference in the localStorage\n\n    const daynightChecker = () => {\n      const hour = moment().format('H')\n      if (hour >= 6 && hour < 18) {\n        setTheme('light')\n        saveThemePreference('light')\n      } else {\n        setTheme('dark')\n        saveThemePreference('dark')\n      }\n    }\n\n    if (!localStorage.getItem('theme')) {\n      daynightChecker()\n    } else {\n      setTheme(JSON.parse(localStorage.getItem('theme')))\n    }\n  }, [])\n\n\n  return (\n    <ThemeContext.Provider value={{ theme, colorTheme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import React, { Component } from \"react\";\nimport Select from \"react-select\";\nimport { ThemeContext } from '../context/ThemeContext'\nimport store from '../store/store'\nimport { connect } from 'react-redux'\nimport { selectedOption, typePlacename, getForcast } from '../store/actions'\n\nclass DropdownSelect extends Component {\n\n\n\n  constructor(props) {\n    super(props);\n    this.state = {}\n\n    this.customStyles = {\n\n      option: (provided, state) => ({\n        ...provided,\n        borderBottom: '1px dotted pink',\n        color: state.isSelected ? 'blue' : this.context.colorTheme === \"dark\" ? \"white\" : 'black',\n        padding: 10,\n        backgroundColor: this.context.colorTheme === \"dark\" ?\n          state.isFocused ? \"#2684FF\" : \"#212529 !important\"\n          :\n          state.isFocused ? \"#2684FF\" : console.log(state, \"lll\"),\n      }),\n      singleValue: (provided, state) => {\n        const opacity = state.isDisabled ? 0.5 : 1;\n        const transition = 'opacity 300ms';\n\n        return { ...provided, opacity, transition };\n      }\n    }\n  }\n\n  onInputChange = e => {\n    this.props.placenameHandler(e)\n  }\n  onChange = selectedOption => {\n    this.props.selectedOption({ city: selectedOption.label, code: selectedOption.code })\n    this.props.getForcast(selectedOption.code)\n\n  }\n  render() {\n    return (\n      <div className=\"basic-single col-4 m-4 mx-auto search-bar\">\n        {this.props.err ? <span className=\"text-danger\">Only english letters allowed</span> : \"\"}\n\n        <Select\n          styles={this.customStyles}\n          classNamePrefix=\"select\"\n          placeholder=\"Search a city...\"\n          isSearchable=\"true\"\n          name=\"cities\"\n          options={this.props.locations}\n          onChange={this.onChange}\n          onInputChange={this.onInputChange}\n        />\n\n      </div>\n    );\n  }\n\n}\nDropdownSelect.contextType = ThemeContext;\n\n\n\nconst mapStateToProps = state => {\n\n  return {\n    err: state.userInput.err,\n    DailyForecasts: state.DailyForecasts\n  }\n}\n\nconst mapDispatchToProps = (e) => {\n\n  return {\n    placenameHandler: (e) => {\n      return store.dispatch(typePlacename(e))\n    },\n    getForcast: (e) => {\n      return store.dispatch(getForcast(e))\n    },\n    selectedOption: (e) => {\n      return store.dispatch(selectedOption(e))\n    }\n\n  }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DropdownSelect)\n","import React, { Component } from \"react\";\n\nexport default class TemperatureConverter extends Component {\n  render() {\n    return (\n\n      <div className=\"form-switch pt-5 p-0\">\n\n        <span className=\"\" >℃</span>\n\n        <input\n          type='checkbox'\n          className=\"form-check-input mx-3\"\n          id='customSwitches'\n          onChange={value =>\n            this.props.handleOnChange(value)\n          }\n          checked={this.props.checked}\n          defaultChecked={true}\n        />\n        <label className=\"form-check-label\" htmlFor='customSwitches'>\n          ℉\n        </label>\n      </div>\n\n    );\n  }\n}\n","import React from \"react\";\nimport Moment from \"react-moment\";\n\nexport const SingleDayWeather = ({\n  selectedDay,\n  dayIndex,\n  dayDate,\n  dayIcon,\n  dayMinTemp,\n  dayMaxTemp,\n  selectedConvert,\n  handleDaySelection,\n}) => {\n  return (\n    <div\n      className={`border border-2 border-dark me-1 mb-2 single-day ${selectedDay === dayIndex ? \"selected\" : \"\"}`}\n      onClick={handleDaySelection}\n    >\n      <div className=\"flex-row bd-highlight m-2 \">\n        <h6>\n          <Moment format=\"ddd\">{dayDate}</Moment>\n        </h6>\n        <img\n          className=\"small-image\"\n          src={`https://developer.accuweather.com/sites/default/files/${dayIcon >= 10 ? dayIcon : \"0\" + dayIcon\n            }-s.png`}\n          alt=\"weather-icon\"\n        />\n        <h6>{dayMaxTemp} {selectedConvert ? \"°F\" : \"°C\"}</h6>\n        <h6>{dayMinTemp} {selectedConvert ? \"°F\" : \"°C\"}</h6>\n      </div>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport { SingleDayWeather } from \"./SingleDayWeather\";\nimport Moment from \"react-moment\";\nimport { connect } from 'react-redux'\nimport { ThemeContext } from '../context/ThemeContext'\n\nclass WeeklyWeatherContainer extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {}\n  }\n\n\n\n  render() {\n    const {\n      weatherData,\n      selectedCity,\n      selectedDay,\n      handleDaySelection,\n      selectedConvert,\n    } = this.props\n    const { theme, colorTheme } = this.context;\n\n    return (\n      <div id={selectedCity} className={`border border-3 border-${theme} container col-11 mx-auto mt-2 gray  rounded text-${colorTheme}`} >\n\n        {\n          weatherData[0] ? (\n            <div className=\"d-flex p-2 bd-highlight justify-content-center top-weather\" >\n              <div className=\"flex-row bd-highlight\">\n                <h4>{selectedCity}</h4>\n                <Moment format=\"dddd\">{weatherData[selectedDay].Date}</Moment>\n\n                <div className=\"flex-row bd-highlight\">\n                  <img\n                    src={`https://developer.accuweather.com/sites/default/files/${weatherData[selectedDay].Day.Icon >= 10\n                      ? weatherData[selectedDay].Day.Icon\n                      : \"0\" + weatherData[selectedDay].Day.Icon\n                      }-s.png`}\n                    alt=\"weather-icon\"\n                  />\n                  <p>{weatherData[selectedDay].Day.IconPhrase}</p>\n                </div>\n              </div>\n            </div>\n          ) : null\n        }\n\n        <div className=\"bd-highlight bottom-weather d-flex flex-wrap justify-content-center p-2\">\n          {weatherData.map((day, index) => (\n            <SingleDayWeather\n              selectedDay={selectedDay}\n              dayIndex={index}\n              key={day.EpochDate}\n              dayDate={day.Date}\n              dayIcon={day.Day.Icon}\n              dayMaxTemp={selectedConvert ? day.Temperature.Maximum.Value : ((parseFloat(day.Temperature.Maximum.Value) - 32) / 1.8).toFixed(2)}\n              dayMinTemp={selectedConvert ? day.Temperature.Minimum.Value : ((parseFloat(day.Temperature.Minimum.Value) - 32) / 1.8).toFixed(2)}\n              selectedConvert={selectedConvert}\n              handleDaySelection={() => handleDaySelection(index)}\n            />\n          ))}\n        </div>\n      </div >\n    )\n  };\n};\n\nWeeklyWeatherContainer.contextType = ThemeContext\n\nconst mapStateToProps = state => {\n\n  return {\n    weatherData: state.weatherData\n  }\n}\n\nconst mapDispatchToProps = (e) => {\n\n  return {\n\n  }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeeklyWeatherContainer)\n","import React, { Component } from \"react\";\r\nimport * as $ from 'jquery';\r\nimport \"bootstrap/dist/js/bootstrap.js\";\r\nexport default class Fav extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <div id=\"\" className=\"pb-3\">\r\n\r\n                <div className=\"fav-btn\">\r\n\r\n                    <span\r\n                        code={this.props.code}\r\n                        city={this.props.city}\r\n                        onClick={this.props.handleOnChange}\r\n                        className={`favme dashicons dashicons-heart ${this.props.active ? \"active\" : \"\"}`}\r\n                    >{this.props.active ? \"Remove from favorits\" : \"Add to favorites\"}</span>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport function favme() {\r\n    $(document).click(function (e) {\r\n        if ($('.collapse').hasClass('show') && !$('nav').is(e.target) && $('nav').has(e.target).length === 0) {\r\n            $('.navbar-toggler').click()\r\n        }\r\n    })\r\n\r\n    /* when a user clicks, toggle the 'is-animating' class */\r\n    $(\".favme\").on('click touchstart', function () {\r\n        $(this).toggleClass('is_animating');\r\n    });\r\n\r\n    /*when the animation is over, remove the class*/\r\n    $(\".favme\").on('animationend', function () {\r\n        $(this).toggleClass('is_animating');\r\n    });\r\n}","import { isEmpty, isNil } from 'lodash-es'\n\n/**\n * Check if the given value is valid or not\n * @param {*} value\n * @returns {Boolean}\n */\nconst isValid = (value) => {\n  return !isEmpty(value) && !isNil(value)\n}\n\nexport default isValid\n","import React, { Component } from \"react\";\r\nimport http from \"../services/httpService\";\r\nimport isValid from '../utils/ValidityChecker'\r\nimport { connect } from 'react-redux'\r\nimport store from '../store/store'\r\nimport { selectedOption, getForcast } from '../store/actions'\r\n\r\nclass Demo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n    * update address using reverse geocoding of Algolia PLaces to obtain city, state, country, cityID\r\n    */\r\n    updateAddress = async (latlong) => {\r\n        let data\r\n        try {\r\n\r\n            data = (\r\n                await http.get(`https://cors-anywhere.herokuapp.com/https://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=${this.props.api_key[2]}&q=${latlong}`)\r\n\r\n            ).data\r\n        } catch (error) {\r\n            data = (\r\n                await http.get(`https://cors-anywhere.herokuapp.com/https://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=${this.props.api_key[3]}&q=${latlong}`)\r\n\r\n            ).data\r\n\r\n        } finally {\r\n            if (isValid(data)) {\r\n                const city = data.AdministrativeArea.EnglishName\r\n                const code = data.Key\r\n                this.setState({ city: city })\r\n                this.props.selectedOption({ city: city, code: code, geo: true })\r\n                this.props.getForcast(code)\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n    formatCoords = (latitude, longitude) => {\r\n        return `${latitude},${longitude}`\r\n    }\r\n    getAddress = async () => {\r\n        if ('geolocation' in navigator) {\r\n            await navigator.geolocation.getCurrentPosition(\r\n\r\n                async (position) => {\r\n                    const latlong = this.formatCoords(\r\n                        position.coords.latitude,\r\n                        position.coords.longitude\r\n                    )\r\n                    this.updateAddress(latlong)\r\n                },\r\n                (error) => {\r\n                    console.error(error)\r\n                }\r\n            )\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getAddress()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h4>Using geolocation JavaScript API in React</h4>\r\n                <span>your location :{this.state.city || <span className=\"text-danger\"> please confirm access to your location </span>}</span>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        code: state.code,\r\n        city: state.city,\r\n        api_key: state.api_key,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (e) => {\r\n\r\n    return {\r\n        selectedOption: (e) => {\r\n            return store.dispatch(selectedOption(e))\r\n        },\r\n        getForcast: (e) => {\r\n            return store.dispatch(getForcast(e))\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Demo)","import React, { Component } from \"react\";\nimport \"./css/App.css\";\nimport http from \"./services/httpService\";\nimport $ from \"jquery\";\nimport DropdownSelect from \"./components/DropdownSelect\";\nimport TemperatureConverter from \"./components/TemperatureConverter\";\nimport WeeklyWeatherContainer from \"./components/WeeklyWeatherContainer\";\nimport Fav from \"./components/Fav\";\nimport { favme } from \"./components/Fav\";\nimport Demo from \"./components/Geo\";\nimport { ThemeContext } from './context/ThemeContext'\nimport { withRouter } from 'react-router-dom';\nimport queryString from 'query-string';\nimport { connect } from 'react-redux'\nimport store from './store/store'\nimport { selectedOption, getForcast } from './store/actions'\nimport { toast } from \"react-toastify\";\n\nconst Loading = () => <div className=\"loading\">\n  <div></div>\n  <div></div>\n</div>\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      locationsApi: [],\n      fav: [],\n      selectedDay: 0,\n      selectedConvert: true,\n\n    };\n\n  }\n  async componentDidMount() {\n\n    await this.getLocations();\n    let { code, selectedCity } = queryString.parse(this.props.location.search)\n    if (code) {\n      this.props.selectedOption({ code: code, city: selectedCity })\n    }\n    await this.props.getForcast(code || this.props.code)\n    favme()\n    this.setState({ fav: this.props.initfav() })\n  }\n  componentWillUnmount() {\n  }\n  async componentDidUpdate(prevProps, prevState) {\n    if (prevProps.location.search !== this.props.location.search && !this.props.geo) {\n      this.props.selectedOption({ code: \"215854\", city: \"Tel Aviv\" })\n      this.props.getForcast(\"215854\")\n    }\n  }\n\n  getLocations = async () => {\n    let locations\n    try {\n      locations = await http.get(\n        `https://cors-anywhere.herokuapp.com/https://dataservice.accuweather.com/locations/v1/topcities/150?apikey=${this.props.api_key[2]}`\n      )\n    }\n    catch (e) {\n      toast.info(\"API KEY HAS BEEN CHANGED\");\n      locations = await http.get(\n        `https://cors-anywhere.herokuapp.com/https://dataservice.accuweather.com/locations/v1/topcities/150?apikey=${this.props.api_key[3]}`\n      )\n    } finally {\n      const cityCountry = [];\n      if (locations) {\n        for (let location of locations.data) {\n          let label = location.AdministrativeArea.EnglishName;\n          let value = location.Country.EnglishName;\n          let code = location.Key;\n          cityCountry.push({ label, value, code });\n        }\n        this.setState({ locationsApi: cityCountry });\n      }\n    }\n  };\n\n\n  fav = (e) => {\n    $(e.target).toggleClass('active');\n    this.setState({\n      fav: this.props.fav(e)\n    })\n  }\n\n  render() {\n    const { theme, colorTheme } = this.context;\n    return (\n      <React.Fragment>\n        <div className={`pb-5 bg-${colorTheme} text-${theme} text-center`} style={{ minHeight: \"inherit\" }} >\n          <h1 className=\"pt-4\">Weather Forcast</h1>\n          {\n            this.props.location.search ? \"\" : <Demo handleOnChange={this.handleOnChange} />\n          }\n\n          <TemperatureConverter\n            handleOnChange={\n              (e) => {\n                this.setState({\n                  selectedConvert: this.props.temperatureConverter(e)\n                });\n              }\n            }\n            checked={this.selectedConvert}\n          />\n\n          <DropdownSelect\n            locations={this.state.locationsApi}\n          />\n          <div className=\"content\">\n\n\n            {\n              this.props.weatherData ?\n                [\n                  < Fav\n                    key=\"fav\"\n                    city={this.props.city}\n                    code={this.props.code}\n                    active={this.state.fav.flat().indexOf(this.props.code) > -1}\n                    handleOnChange={(e) => this.fav(e)}\n                  />\n                  ,\n                  this.props.loading ?\n                    <Loading key=\"Loading\" />\n                    :\n                    Object.keys(this.props.weatherData).length === 0 ?\n                      \"\" :\n                      <WeeklyWeatherContainer\n                        key=\"WeeklyWeatherContainer\"\n                        handleDaySelection={(e) => {\n                          this.props.handleDaySelection(e)\n                          this.setState({\n                            selectedDay: e\n                          });\n                        }}\n                        selectedDay={this.state.selectedDay}\n                        selectedCity={this.props.city}\n                        selectedConvert={this.state.selectedConvert}\n                      />\n                ] : \"\"}\n\n          </div>\n        </div>\n      </React.Fragment >\n    );\n  }\n}\nApp.contextType = ThemeContext\n\n\nconst mapStateToProps = state => {\n  return {\n    weatherData: state.weatherData,\n    code: state.code,\n    city: state.city,\n    api_key: state.api_key,\n    loading: state.loading,\n    geo: state.geo\n  }\n}\n\nconst mapDispatchToProps = (e) => {\n\n  return {\n    getForcast: (e) => {\n      return store.dispatch(getForcast(e))\n    },\n    selectedOption: (e) => {\n      return store.dispatch(selectedOption(e))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(App))\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport {PropTypes} from 'prop-types'\nimport {FaSun, FaMoon} from 'react-icons/fa'\n\nconst IconComponent = ({iconType}) => {\n  return (\n    <div>\n      {iconType === 'light' ? (\n        <p className='text-toggle'>\n          <FaSun />\n        </p>\n      ) : (\n        <p className='text-toggle'>\n          <FaMoon />\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default IconComponent\n\nIconComponent.propTypes = {\n  iconType: PropTypes.string\n}\n","import React, { useContext } from 'react'\nimport Toggle from 'react-toggle'\nimport { ThemeContext } from '../context/ThemeContext'\nimport IconComponent from './IconComponent'\nimport { isEmpty } from 'lodash-es'\n\nconst HeaderComponent = () => {\n  const { theme, toggleTheme } = useContext(ThemeContext)\n  return (\n    <div className='flex justify-between items-center px-5 py-5'>\n\n      <div>\n        {/* below condition to avoid toggle glitch effect on page refresh */}\n        {!isEmpty(theme) ? (\n          <Toggle\n            checked={theme === 'light'}\n            icons={{\n              checked: <IconComponent iconType={'light'} />,\n              unchecked: <IconComponent iconType={'dark'} />,\n            }}\n            onChange={toggleTheme}\n          />\n        ) : null}\n      </div>\n    </div>\n  )\n}\n\nexport default HeaderComponent\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport HeaderComponent from \"./HeaderComponent\";\r\nimport { ThemeContext } from '../context/ThemeContext'\r\n\r\nclass Navbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    render() {\r\n        const { colorTheme } = this.context;\r\n        return (\r\n\r\n            <nav className={`navbar navbar-expand-lg navbar-${colorTheme} bg-${colorTheme}`} style={{\r\n                border: \"solid\",\r\n                zIndex: 1,\r\n                borderColor: \"darksalmon\"\r\n            }} >\r\n                <div className=\"container-fluid\">\r\n\r\n                    <NavLink className=\"navbar-brand\" to={{\r\n                        pathname: \"/weather--react\",\r\n                        search: \"\",\r\n                        hash: \"\",\r\n                        state: {}\r\n                    }} >\r\n                        Home\r\n          </NavLink>\r\n                    <button className=\"navbar-toggler ms-sm-auto\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link\" to=\"/MyFav\">\r\n                                    MyFav\r\n                </NavLink>\r\n                            </li>\r\n\r\n                        </ul>\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <HeaderComponent />\r\n                            </li>\r\n\r\n                        </ul>\r\n\r\n                    </div>\r\n                    <div className=\"navbar-brand text-wrap\">Herolo - Weather App</div>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\nNavbar.contextType = ThemeContext;\r\n\r\nexport default Navbar;\r\n\r\n","import React from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Fav from \"./Fav\";\r\n\r\nexport const FavWeather = ({\r\n    weatherData,\r\n    selectedCity,\r\n    code,\r\n    selectedDay,\r\n    handleDaySelection,\r\n    selectedConvert,\r\n    fav\r\n}) => {\r\n    return (\r\n\r\n\r\n        <div className=\"single-day col-11 flex-fill m-0 m-2 navbar-brand\">\r\n            <div id={selectedCity} code={code} className=\"container h-100  mx-auto mt-2 gray  rounded text-white \">\r\n\r\n                {weatherData[0] ? (\r\n                    <Link className=\" navbar-brand\" to={{\r\n                        pathname: \"/weather--react\",\r\n                        search: \"?selectedCity=\" + selectedCity + \"&code=\" + code,\r\n                    }}>\r\n                        <div className=\" d-flex p-2 bd-highlight justify-content-center text-light text-break \">\r\n\r\n                            <div className=\"flex-row bd-highlight text-wrap\">\r\n\r\n                                <h4>{selectedCity}</h4>\r\n                                <Moment format=\"dddd\">{weatherData[selectedDay].Date}</Moment>\r\n\r\n                                <div className=\"flex-row bd-highlight\">\r\n                                    <span className=\"\">\r\n                                        {selectedConvert ? weatherData[selectedDay].Temperature.Minimum.Value + \" F°\" : ((parseFloat(weatherData[selectedDay].Temperature.Minimum.Value) - 32) / 1.8).toFixed(2) + \" C°\"}\r\n                                    </span>                            <img\r\n                                        src={`https://developer.accuweather.com/sites/default/files/${weatherData[selectedDay].Day.Icon >= 10\r\n                                            ? weatherData[selectedDay].Day.Icon\r\n                                            : \"0\" + weatherData[selectedDay].Day.Icon\r\n                                            }-s.png`}\r\n                                        alt=\"weather-icon\"\r\n                                    />\r\n                                    <span>\r\n                                        {selectedConvert ? weatherData[selectedDay].Temperature.Maximum.Value + \" F°\" : ((parseFloat(weatherData[selectedDay].Temperature.Maximum.Value) - 32) / 1.8).toFixed(2) + \" C°\"}\r\n                                    </span>\r\n\r\n                                    <p>{weatherData[selectedDay].Day.IconPhrase}</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </Link>\r\n                ) : null}\r\n                < Fav\r\n                    key={code}\r\n                    city={selectedCity}\r\n                    code={code}\r\n                    active={true}\r\n                    handleOnChange={(e) => fav(e)}\r\n                />\r\n            </div >\r\n        </div>\r\n    );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { FavWeather } from \"./FavWeather\";\r\nimport $ from \"jquery\";\r\nimport TemperatureConverter from \"./TemperatureConverter\";\r\nimport { ThemeContext } from '../context/ThemeContext'\r\nimport { favme } from \"./Fav\";\r\nimport { connect } from 'react-redux'\r\nimport store from '../store/store'\r\nimport { selectedOption, getForcast } from '../store/actions'\r\n\r\n\r\nconst Loading = () => <div className=\"loading\">\r\n    <div></div>\r\n    <div></div>\r\n</div>\r\n\r\n// export default \r\nclass MyFav extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedDay: new Date().getDay(),\r\n            selectedConvert: true,\r\n            weatherData: [],\r\n            fav: this.props.fav()\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.fav)\r\n            this.data()\r\n        favme()\r\n\r\n    }\r\n    componentWillMount() {\r\n        this.setState({ fav: this.props.initfav() })\r\n\r\n    }\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n\r\n    data = () => {\r\n        if (this.state.fav.length)\r\n            Promise.all(this.state.fav.map(async (x, i) => {\r\n                await this.props.getForcast(x[1])\r\n                return this.props.weatherData\r\n            })).then((data) => {\r\n                this.setState({ weatherData: data })\r\n            })\r\n        else\r\n            this.setState({ fav: this.props.fav() })\r\n    }\r\n    fav = (e) => {\r\n        $(e.target).toggleClass('active');\r\n        this.props.fav(e)\r\n        this.data()\r\n    }\r\n    render() {\r\n        const { theme, colorTheme } = this.context;\r\n        return (\r\n            <div className={`pb-5 bg-${colorTheme} text-${theme} text-center`} style={{ minHeight: \"inherit\" }} >\r\n                <h1 className=\"pt-4\">My favorites</h1>\r\n                {\r\n                    this.state.weatherData.length ? <TemperatureConverter\r\n                        handleOnChange={\r\n                            (e) => {\r\n                                this.setState({\r\n                                    selectedConvert: this.props.temperatureConverter(e)\r\n                                });\r\n                            }\r\n                        }\r\n                        checked={this.selectedConvert}\r\n                    /> : \"\"\r\n                }\r\n                <div className=\"d-flex flex-lg-nowrap flex-wrap\">\r\n                    {\r\n\r\n                        this.state.weatherData.length ?\r\n                            this.state.fav.map((x, i) => {\r\n                                const selectedDay = [...this.state.weatherData[i]].findIndex((x) => this.state.selectedDay === new Date(x.Date).getDay())\r\n\r\n                                return (\r\n                                    <FavWeather\r\n                                        key={i}\r\n                                        handleDaySelection={(e) => {\r\n                                            this.setState({\r\n                                                selectedDay: e\r\n                                            });\r\n                                        }}\r\n                                        selectedDay={selectedDay}\r\n                                        selectedCity={x[0]}\r\n                                        code={x[1]}\r\n                                        weatherData={this.state.weatherData[i]}\r\n                                        selectedConvert={this.state.selectedConvert}\r\n                                        fav={this.fav}\r\n                                    />\r\n\r\n                                )\r\n                            })\r\n                            : this.state.fav.length ? <Loading key=\"Loading\" />\r\n                                : <h1>No favorites found</h1>\r\n\r\n                    }\r\n                </div >\r\n            </div >\r\n        );\r\n    }\r\n}\r\nMyFav.contextType = ThemeContext\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        weatherData: state.weatherData,\r\n        selectedOption: state.selectedOption,\r\n        code: state.code,\r\n        city: state.city,\r\n        api_key: state.api_key,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (e) => {\r\n\r\n    return {\r\n        getForcast: (e) => {\r\n            return store.dispatch(getForcast(e))\r\n        },\r\n        selectedOption: (e) => {\r\n            return store.dispatch(selectedOption(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyFav)\r\n","import React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store/store'\nimport './css/index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Navbar from \"./components/Navbar\";\nimport { Switch, Route } from \"react-router-dom\";\nimport MyFav from \"./components/MyFav\";\nimport { ThemeContextProvider } from './context/ThemeContext'\nimport { ThemeContext } from './context/ThemeContext'\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nconst FOOTER = () => <footer>\n  <div className=\"text-center\">\n    <span>made with love by yair ♥</span>\n    <div style={{\n      position: 'fixed',\n      bottom: 0,\n      border: 0,\n      left: 0,\n    }}>\n      <a\n        href='https://github.com/hthrkuh/weather--react'\n        className='github-corner'\n        aria-label='View source on GitHub'\n        target='_blank'\n        rel='noreferrer noopener'>\n        <svg\n          width='80'\n          height='80'\n          viewBox='0 0 250 250'\n          style={{\n            fill: '#292929',\n            color: '#fff',\n\n            transform: 'scale(-1, -1)',\n          }}\n          aria-hidden='true'>\n          <path d='M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z'></path>\n          <path\n            d='M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2'\n            fill='currentColor'\n            style={{ transformOrigin: '130px 106px' }}\n            className='octo-arm'></path>\n          <path\n            d='M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z'\n            fill='currentColor'\n            className='octo-body'></path>\n        </svg>\n      </a>\n    </div>\n  </div>\n</footer>\n\n\nclass Index extends Component {\n  constructor() {\n    super();\n    this.state = {\n      myfav: localStorage.getItem('fav') ? JSON.parse(localStorage.getItem('fav')) : [],\n    };\n  }\n\n  handleDaySelection = e => {\n    return e\n  };\n\n  temperatureConverter = e => {\n    return e.target.checked\n  }\n  fav = e => {\n    var myfav = this.state.myfav\n    if (e) {\n      var target = e.target\n      if ([...target.classList].indexOf(\"active\") === -1) {\n        var index = myfav.findIndex(x => x[1] === target.getAttribute(\"code\"))\n        myfav.splice(index, 1)\n      } else {\n        myfav.push([target.getAttribute(\"city\"), target.getAttribute(\"code\")])\n      }\n      localStorage.setItem('fav', JSON.stringify(myfav))\n    }\n    return myfav\n  }\n  initfav = () => {\n    return this.state.myfav\n  }\n  render() {\n    const { theme, colorTheme } = this.context;\n\n    return (\n      <Provider store={store}>\n        <ThemeContextProvider>\n          <BrowserRouter>\n            <ToastContainer />\n            <header className={` bg-${colorTheme} text-${theme}`} >\n              <Navbar />\n            </header>\n            <main className=\"flex-column\" style={{ minHeight: \"450px\" }}>\n              <Switch>\n                <Route path=\"/MyFav\" component={() => <MyFav\n                  initfav={this.initfav}\n                  myfav={this.state.myfav}\n                  temperatureConverter={this.temperatureConverter}\n                  handleDaySelection={this.handleDaySelection}\n                  fav={this.fav}\n                />} />\n                <Route path=\"/weather--react\" exact component={() => <App\n                  initfav={this.initfav}\n                  temperatureConverter={this.temperatureConverter}\n                  handleDaySelection={this.handleDaySelection}\n                  fav={this.fav}\n                />}\n                />\n              </Switch>\n            </main >\n            <FOOTER />\n          </BrowserRouter>\n        </ThemeContextProvider>\n      </Provider>\n    )\n\n  }\n}\nIndex.contextType = ThemeContext;\n\n\n\nReactDOM.render(\n  <Index />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}